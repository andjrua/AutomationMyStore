package com.automationpractice.mystore.questions;

import static net.serenitybdd.screenplay.questions.WebElementQuestion.the;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Properties;
import javax.activation.*;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;

import static com.automationpractice.mystore.userinterfaces.MyStorePurchasePage.COMPLETE;
import static com.automationpractice.mystore.userinterfaces.MyStorePurchasePage.CONFIRMATION;

import net.serenitybdd.core.pages.WebElementFacade;
import net.serenitybdd.screenplay.Actor;
import net.serenitybdd.screenplay.Question;

public class TheOrderIs implements Question<Boolean>{

	private List<WebElementFacade> tabs;
	final String username = "andjrua@gmail.com";
    final String password = "1036620710";
	
	@Override
	public Boolean answeredBy(Actor actor) {
		tabs = CONFIRMATION.resolveAllFor(actor);
		File myScreenshot = tabs.get(0).getScreenshotAs(OutputType.FILE);
		String path = "Screenshots/"+ System.currentTimeMillis() +".png";
		try {
			FileUtils.copyFile(myScreenshot, new File(path));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		Properties props = new Properties();
	    props.put("mail.smtp.auth", true);
	    props.put("mail.smtp.starttls.enable", true);
	    props.put("mail.smtp.host", "smtp.gmail.com");
	    props.put("mail.smtp.port", "587");

	    Session session = Session.getInstance(props,
	            new javax.mail.Authenticator() {
	                protected PasswordAuthentication getPasswordAuthentication() {
	                    return new PasswordAuthentication(username, password);
	                }
	            });

	    try {

	        Message message = new MimeMessage(session);
	        message.setFrom(new InternetAddress("andjrua@gmail.com"));
	        message.setRecipients(Message.RecipientType.TO,
	                InternetAddress.parse("andjrua@gmail.com"));
	        message.setSubject("Testing Subject");
	        message.setText("PFA");

	        MimeBodyPart messageBodyPart = new MimeBodyPart();

	        Multipart multipart = new MimeMultipart();

	        messageBodyPart = new MimeBodyPart();
	        String file = path;
	        String fileName = "comprobante de pago";
	        DataSource source = new FileDataSource(file);
	        messageBodyPart.setDataHandler(new DataHandler(source));
	        messageBodyPart.setFileName(fileName);
	        multipart.addBodyPart(messageBodyPart);

	        message.setContent(multipart);

	        System.out.println("Sending");

	        Transport.send(message);

	        System.out.println("Done");

	    } catch (MessagingException e) {
	        e.printStackTrace();
	    }
		return the(COMPLETE).answeredBy(actor).containsText("Your order on My Store is complete");
	}

	public static TheOrderIs complete() {
		return new TheOrderIs();
	}
}
